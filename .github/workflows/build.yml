name: Build

on:
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version: '16.x'
          registry-url: https://npm.pkg.github.com
          scope: '@secretkeylabs'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGE_REGISTRY_TOKEN }}
      - name: Build
        run: npm run build --if-present
      # - name: Test
      # run: npm test --passWithNoTests
      - name: Save Filename
        id: save-filename
        run: |
          echo "FILENAME=xverse-extension.$(echo ${{github.ref_name}}| sed 's/\//-/').$(git rev-parse --short ${{ github.sha }}).zip" >> $GITHUB_OUTPUT
      - name: Create Archive
        run: |
          zip -r build.zip ./build
      - name: Upload Archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.save-filename.outputs.FILENAME }}
          path: build.zip
          if-no-files-found: error
      # - name: Comment on pull request
      #   uses: tonyhallett/artifacts-url-comments@v1.1.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     prefix: Here are the artifacts
      #     suffix: Have a nice day.
      #     format: (name)[url]
  comment-on-pr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Artifact URL & PR Info
        env:
          GITHUB_TOKEN: ${{ github.token }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
        run: |
          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Job ID: $PREVIOUS_JOB_ID"
          echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"

          ARTIFACT_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) |
            .archive_download_url")

          echo "ARTIFACT URL: $ARTIFACT_URL"
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> "$GITHUB_ENV"

          PR_NUMBER=$(jq -r '.pull_requests[0].number' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")

          echo "PR Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"

          HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")

          echo "Head sha: $HEAD_SHA"
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"
      - name: Update Comment
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/\
            runs/${{ env.PREVIOUS_JOB_ID }}"
          HEAD_SHA: ${{ env.HEAD_SHA }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ env.PR_NUMBER }}
          body: |-
            build: ${{ env. ARTIFACT_URL }}

            Please note that files only stay for around 90 days
